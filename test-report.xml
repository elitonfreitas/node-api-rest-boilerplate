<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/integration/users/UserController.test.js">
    <testCase name="User integration should create a new User" duration="205"/>
    <testCase name="User integration should dont create a new User without name" duration="12"/>
    <testCase name="User integration should dont create a new User without email" duration="7"/>
    <testCase name="User integration should authenticate with new User" duration="104"/>
    <testCase name="User integration should update User by id" duration="103"/>
    <testCase name="User integration should dont update User without id" duration="9"/>
    <testCase name="User integration should dont update User with invalid id" duration="88"/>
    <testCase name="User integration should get User by id" duration="14"/>
    <testCase name="User integration should get User by id with no result" duration="8"/>
    <testCase name="User integration should get all Users with pager" duration="17"/>
    <testCase name="User integration should get all Users without pager" duration="12"/>
    <testCase name="User integration should dont delete User without id" duration="6"/>
    <testCase name="User integration should dont delete User with invalid id" duration="8"/>
    <testCase name="User integration should delete User" duration="7"/>
    <testCase name="User integration should get all Users with no results with pager" duration="9"/>
    <testCase name="User integration should get all Users with no results without pager" duration="9"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/api/modules/users/controllers/UserController.spec.js">
    <testCase name="UserController should create one user with success" duration="104"/>
    <testCase name="UserController should create one user with error" duration="6"/>
    <testCase name="UserController should get one user with success" duration="10"/>
    <testCase name="UserController should get one user without results" duration="3"/>
    <testCase name="UserController should get all users with success" duration="14"/>
    <testCase name="UserController should put one user with success" duration="97"/>
    <testCase name="UserController should put one user but not update" duration="100"/>
    <testCase name="UserController should put one user with params error" duration="1"/>
    <testCase name="UserController should delete one user with success" duration="2"/>
    <testCase name="UserController should delete one user but not found" duration="2"/>
    <testCase name="UserController should delete one user with params error" duration="1"/>
    <testCase name="UserController should get all users without results" duration="5"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/api/modules/users/controllers/AuthController.spec.js">
    <testCase name="AuthController should create user for test" duration="104"/>
    <testCase name="AuthController should auth user with success" duration="86"/>
    <testCase name="AuthController should not auth user with empty login" duration="4"/>
    <testCase name="AuthController should not auth user with invalid password" duration="84"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/App.spec.js">
    <testCase name="App should call connect with MongoDB success" duration="131"/>
    <testCase name="App should call connect with MongoDB error" duration="2"/>
    <testCase name="App should initialize express middlewares" duration="4"/>
    <testCase name="App should initialize express middlewares without JWT" duration="2"/>
    <testCase name="App should call default route" duration="2"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/api/modules/users/models/User.model.spec.js">
    <testCase name="users model should create &amp; save user successfully" duration="106"/>
    <testCase name="users model should update user successfully with password" duration="99"/>
    <testCase name="users model should update user successfully without password" duration="5"/>
    <testCase name="users model create user without required field should failed" duration="9"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/commons/Routes.spec.js">
    <testCase name="Routes should generate route for get" duration="2"/>
    <testCase name="Routes should generate route for post" duration="4"/>
    <testCase name="Routes should generate route for post with validator error" duration="2"/>
    <testCase name="Routes should get field name from error message" duration="1"/>
    <testCase name="Routes should not get field name from error message" duration="2"/>
    <testCase name="Routes should get field name from error message" duration="2"/>
    <testCase name="Routes should get validator error messages" duration="6"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/commons/utils/DataUtils.spec.js">
    <testCase name="DataUtils should format data with type Date" duration="4"/>
    <testCase name="DataUtils should format data with type Date without format" duration="4"/>
    <testCase name="DataUtils should format data with type Number" duration="1"/>
    <testCase name="DataUtils should format data with type Number without format" duration="0"/>
    <testCase name="DataUtils should get fields from Model" duration="2"/>
    <testCase name="DataUtils should get date format YYYY-MM-DD[T]HH:mm:ss.SSSZZ" duration="1"/>
    <testCase name="DataUtils should get date format YYYY-MM-DD" duration="1"/>
    <testCase name="DataUtils should get date format YYYY-MM-DD[T]HH:mm:ss" duration="1"/>
    <testCase name="DataUtils should get date format DD/MM/YYYY HH:mm:ss" duration="2"/>
    <testCase name="DataUtils should get date format DD/MM/YYYY HH:mm" duration="1"/>
    <testCase name="DataUtils should get date format YYYY-MM-DD[T]HH:mm" duration="2"/>
    <testCase name="DataUtils should get date format DD/MM/YYYY" duration="2"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/commons/HttpController.spec.js">
    <testCase name="HttpController should call options method" duration="2"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/commons/middlewares/JwtMiddleware.spec.js">
    <testCase name="JwtMiddleware should process check route without token" duration="0"/>
    <testCase name="JwtMiddleware should process check route with token" duration="3"/>
    <testCase name="JwtMiddleware should process check route with invalid token" duration="2"/>
    <testCase name="JwtMiddleware should process check route with invalid origin" duration="4"/>
    <testCase name="JwtMiddleware should process check route with valid token" duration="5"/>
    <testCase name="JwtMiddleware should process next route" duration="0"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/commons/MongoController.spec.js">
    <testCase name="MongoController should get connection url without auth and replica set" duration="1"/>
    <testCase name="MongoController should get connection url with auth without replica set" duration="0"/>
    <testCase name="MongoController should get connection url with replica set" duration="1"/>
    <testCase name="MongoController should connect with Mongo" duration="2"/>
    <testCase name="MongoController should connect with Mongo error" duration="2"/>
    <testCase name="MongoController should disconnect with Mongo" duration="1"/>
    <testCase name="MongoController should disconnect with Mongo error" duration="1"/>
  </file>
  <file path="/Users/eliton.freitas/Workplace/Estudos/node-api-rest-boilerplate/test/unit/commons/utils/ValidatorUtils.spec.js">
    <testCase name="ValidatorUtils should check if variable is an object" duration="1"/>
    <testCase name="ValidatorUtils should check if variable not is an object" duration="0"/>
    <testCase name="ValidatorUtils should check if variable is a number" duration="1"/>
    <testCase name="ValidatorUtils should check if variable not is a number" duration="4"/>
    <testCase name="ValidatorUtils should check if variable is undefined" duration="1"/>
  </file>
</testExecutions>